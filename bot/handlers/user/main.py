from aiogram import Dispatcher, types, md
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

commandsList = ['start', 'check_language', "remove_keyboard"]
"""
–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
"""


def register_user_handlers(dp: Dispatcher):
    # todo: register all user handlers0
    dp.register_message_handler(send_welcome, commands=['start'])
    dp.register_message_handler(check_language, commands=['check_language'])
    dp.register_message_handler(remove_keybord, commands=['remove_keyboard'])
    pass


async def send_welcome(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start
    –î–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥–∞—Ö
    """

    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True)

    for item in commandsList:
        button = KeyboardButton(str(f"/{item}"))
        greet_kb.add(button)

    await message.reply("–ü—Ä–∏–≤–µ—Ç", reply_markup=greet_kb)

async def remove_keybord(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start
    –î–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥–∞—Ö
    """

    await message.reply("–£–±–∏—Ä–∞—é", reply_markup=ReplyKeyboardRemove())


async def check_language(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /check_language
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param message:
    :return:
    """
    locale = message.from_user.locale

    await message.reply(md.text(
        md.bold('Info about your language:'),
        md.text('üî∏', md.bold('Code:'), md.code(locale.language)),
        md.text('üî∏', md.bold('Territory:'), md.code(locale.territory or 'Unknown')),
        md.text('üî∏', md.bold('Language name:'), md.code(locale.language_name)),
        md.text('üî∏', md.bold('English language name:'), md.code(locale.english_name)),
        sep='\n',
))